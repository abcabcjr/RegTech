// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assets/catalogue": {
            "get": {
                "description": "Retrieve all discovered assets for 2D view",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get asset catalogue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by asset type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by asset status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.AssetCatalogueResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/discover": {
            "post": {
                "description": "Start asset discovery for a list of hosts using recontool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Discover assets",
                "parameters": [
                    {
                        "description": "Hosts to discover",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.DiscoverAssetsRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/v1.DiscoverAssetsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/scan": {
            "post": {
                "description": "Start scanning all assets with specified scripts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Start scan of all assets",
                "parameters": [
                    {
                        "description": "Scan configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.StartAllAssetsScanRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/v1.StartAllAssetsScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/{id}": {
            "get": {
                "description": "Get detailed information about a specific asset including scan results",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get asset details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.AssetDetailsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/{id}/scan": {
            "post": {
                "description": "Start scanning a specific asset with specified scripts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Start asset scan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scan configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.StartAssetScanRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/v1.StartAssetScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/asset/{id}": {
            "get": {
                "description": "Retrieve all checklist items applicable to a specific asset with their current status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get asset-specific checklist items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/global": {
            "get": {
                "description": "Retrieve all global checklist items with their current status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get global checklist items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/status": {
            "post": {
                "description": "Set the status (yes/no/na) of a checklist item, either global or asset-specific",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Set checklist item status",
                "parameters": [
                    {
                        "description": "Status update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SetStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/templates": {
            "get": {
                "description": "Retrieve all available checklist item templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "List all checklist templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ChecklistItemTemplate"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/templates/upload": {
            "post": {
                "description": "Upload a JSON file containing checklist templates that will overwrite all existing templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Upload checklist templates from JSON",
                "parameters": [
                    {
                        "description": "Templates upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UploadTemplatesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the service is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.HealthResponse"
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "description": "Get the status and progress of a job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.JobStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.SetStatusRequest": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "description": "Asset ID (empty for global items)",
                    "type": "string",
                    "example": "asset-123"
                },
                "item_id": {
                    "description": "Checklist item template ID",
                    "type": "string",
                    "example": "security-policy-001"
                },
                "notes": {
                    "description": "Optional notes",
                    "type": "string",
                    "example": "Verified during security audit"
                },
                "status": {
                    "description": "Status: yes, no, or na",
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "na"
                    ],
                    "example": "yes"
                }
            }
        },
        "handler.UploadTemplatesRequest": {
            "type": "object",
            "properties": {
                "templates": {
                    "description": "Array of checklist templates to upload",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChecklistItemTemplate"
                    }
                }
            }
        },
        "model.ChecklistItemTemplate": {
            "type": "object",
            "properties": {
                "asset_types": {
                    "description": "Applicable asset types if scope is \"asset\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "evidence_rules": {
                    "description": "Rules for auto-derivation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EvidenceRule"
                    }
                },
                "id": {
                    "type": "string"
                },
                "recommendation": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "scope": {
                    "description": "\"global\" or \"asset\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.DerivedChecklistItem": {
            "type": "object",
            "properties": {
                "asset_types": {
                    "description": "Applicable asset types if scope is \"asset\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "evidence": {
                    "description": "Relevant metadata for auto-derived status",
                    "type": "object",
                    "additionalProperties": true
                },
                "evidence_rules": {
                    "description": "Rules for auto-derivation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EvidenceRule"
                    }
                },
                "id": {
                    "type": "string"
                },
                "notes": {
                    "description": "From manual assignment",
                    "type": "string"
                },
                "recommendation": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "scope": {
                    "description": "\"global\" or \"asset\"",
                    "type": "string"
                },
                "source": {
                    "description": "\"auto\" or \"manual\"",
                    "type": "string"
                },
                "status": {
                    "description": "\"yes\", \"no\", \"na\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "From manual assignment",
                    "type": "string"
                }
            }
        },
        "model.EvidenceRule": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "e.g., \"http.title\", \"last_scanned_at\"",
                    "type": "string"
                },
                "op": {
                    "description": "\"exists\", \"eq\", \"regex\", \"gte_days_since\"",
                    "type": "string"
                },
                "source": {
                    "description": "\"scan_metadata\"",
                    "type": "string"
                },
                "value": {
                    "description": "Value for \"eq\", \"regex\", \"gte_days_since\""
                }
            }
        },
        "v1.AssetCatalogueResponse": {
            "type": "object",
            "required": [
                "assets",
                "total"
            ],
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AssetSummary"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.AssetDetails": {
            "type": "object",
            "required": [
                "discovered_at",
                "id",
                "scan_count",
                "status",
                "type",
                "value"
            ],
            "properties": {
                "discovered_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_scanned_at": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "scan_count": {
                    "type": "integer"
                },
                "scan_results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ScanResult"
                    }
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1.AssetDetailsResponse": {
            "type": "object",
            "required": [
                "asset"
            ],
            "properties": {
                "asset": {
                    "$ref": "#/definitions/v1.AssetDetails"
                }
            }
        },
        "v1.AssetSummary": {
            "type": "object",
            "required": [
                "discovered_at",
                "id",
                "scan_count",
                "status",
                "type",
                "value"
            ],
            "properties": {
                "discovered_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_scanned_at": {
                    "type": "string"
                },
                "scan_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "example": "discovered,scanning,scanned,error"
                },
                "type": {
                    "type": "string",
                    "example": "domain,subdomain,ip,service"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1.DiscoverAssetsRequest": {
            "type": "object",
            "required": [
                "hosts"
            ],
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "example.com",
                        "192.168.1.1"
                    ]
                }
            }
        },
        "v1.DiscoverAssetsResponse": {
            "type": "object",
            "required": [
                "host_count",
                "job_id",
                "message",
                "started_at"
            ],
            "properties": {
                "host_count": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "v1.ErrorResponse": {
            "type": "object",
            "required": [
                "code",
                "error"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "v1.HealthResponse": {
            "type": "object",
            "required": [
                "services",
                "status",
                "timestamp"
            ],
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "healthy,unhealthy"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "v1.JobProgress": {
            "type": "object",
            "required": [
                "completed",
                "failed",
                "total"
            ],
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.JobStatusResponse": {
            "type": "object",
            "required": [
                "job_id",
                "progress",
                "started_at",
                "status"
            ],
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/definitions/v1.JobProgress"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "pending,running,completed,failed"
                }
            }
        },
        "v1.ScanResult": {
            "type": "object",
            "required": [
                "duration",
                "executed_at",
                "id",
                "script_name",
                "success"
            ],
            "properties": {
                "duration": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "executed_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "output": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "script_name": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "v1.StartAllAssetsScanRequest": {
            "type": "object",
            "properties": {
                "asset_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "domain",
                        "ip",
                        "service"
                    ]
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.StartAllAssetsScanResponse": {
            "type": "object",
            "required": [
                "asset_count",
                "job_id",
                "message",
                "started_at"
            ],
            "properties": {
                "asset_count": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "v1.StartAssetScanRequest": {
            "type": "object",
            "properties": {
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "vulnerability_scan.lua",
                        "port_scan.lua"
                    ]
                }
            }
        },
        "v1.StartAssetScanResponse": {
            "type": "object",
            "required": [
                "asset_id",
                "job_id",
                "message",
                "started_at"
            ],
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Asset Scanner API",
	Description:      "A powerful asset discovery and scanning API with Lua script support",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
