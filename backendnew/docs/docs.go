// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assets/catalogue": {
            "get": {
                "description": "Retrieve all discovered assets for 2D view",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get asset catalogue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by asset type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by asset status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.AssetCatalogueResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/discover": {
            "post": {
                "description": "Start asset discovery for a list of hosts using integrated recon service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Discover assets",
                "parameters": [
                    {
                        "description": "Hosts to discover",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.DiscoverAssetsRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/v1.DiscoverAssetsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/scan": {
            "post": {
                "description": "Start scanning all assets with specified scripts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Start scan of all assets",
                "parameters": [
                    {
                        "description": "Scan configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.StartAllAssetsScanRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/v1.StartAllAssetsScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/{id}": {
            "get": {
                "description": "Get detailed information about a specific asset including scan results",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get asset details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.AssetDetailsResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/assets/{id}/scan": {
            "post": {
                "description": "Start scanning a specific asset with specified scripts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Start asset scan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Scan configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.StartAssetScanRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/v1.StartAssetScanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/business-units": {
            "get": {
                "description": "Retrieve all business units",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-units"
                ],
                "summary": "List business units",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.ListBusinessUnitsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new business unit with the specified name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-units"
                ],
                "summary": "Create business unit",
                "parameters": [
                    {
                        "description": "Business unit creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateBusinessUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.BusinessUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/business-units/{id}": {
            "get": {
                "description": "Retrieve a business unit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-units"
                ],
                "summary": "Get business unit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.BusinessUnitResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a business unit's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-units"
                ],
                "summary": "Update business unit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Business unit update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateBusinessUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.BusinessUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a business unit by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-units"
                ],
                "summary": "Delete business unit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business unit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.GenericStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/asset-templates": {
            "get": {
                "description": "Retrieve all asset-scoped checklist templates with their coverage across all assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get all asset-scoped templates with coverage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/asset/{id}": {
            "get": {
                "description": "Retrieve all checklist items applicable to a specific asset with their current status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get asset-specific checklist items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/business-unit/status": {
            "post": {
                "description": "Set the status (yes/no/na) of a checklist item for a specific business unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Set business unit checklist item status",
                "parameters": [
                    {
                        "description": "Business unit checklist status update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SetBusinessUnitChecklistStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/business-unit/{businessUnitId}": {
            "get": {
                "description": "Retrieve all global checklist items with their current status for a specific business unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get business unit checklist items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business Unit ID",
                        "name": "businessUnitId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/coverage/summary": {
            "get": {
                "description": "Get a summary of compliance coverage showing which assets are covered by compliance checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get compliance coverage summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/global": {
            "get": {
                "description": "Retrieve all global checklist items with their current status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Get global checklist items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/status": {
            "post": {
                "description": "Set the status (yes/no/na) of a checklist item, either global or asset-specific",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Set checklist item status",
                "parameters": [
                    {
                        "description": "Status update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SetStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/templates": {
            "get": {
                "description": "Retrieve all available checklist item templates with covered assets that are not compliant (status \"no\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "List all checklist templates with non-compliant asset coverage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DerivedChecklistItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/checklist/templates/upload": {
            "post": {
                "description": "Upload a JSON file containing checklist templates that will overwrite all existing templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checklist"
                ],
                "summary": "Upload checklist templates from JSON",
                "parameters": [
                    {
                        "description": "Templates upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UploadTemplatesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "List all file attachments for a specific checklist key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "List file attachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Checklist key (e.g., global:item1 or asset:assetId:item1)",
                        "name": "checklistKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FileAttachmentSummary"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/limits": {
            "get": {
                "description": "Get information about file upload limits and restrictions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get upload limits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/files/status": {
            "get": {
                "description": "Get the current status of the MinIO file upload service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get file service status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/files/supported-types": {
            "get": {
                "description": "Get the list of content types that are supported for file uploads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get supported content types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/files/upload": {
            "post": {
                "description": "Upload a file directly as part of a checklist item",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Checklist key (e.g., global:item1)",
                        "name": "checklist_key",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.FileUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/{fileId}": {
            "get": {
                "description": "Get metadata for a file attachment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get file information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FileAttachment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a file attachment and remove it from MinIO storage",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Delete file attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/{fileId}/download": {
            "get": {
                "description": "Download a file attachment directly",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Download file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the service is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.HealthResponse"
                        }
                    }
                }
            }
        },
        "/incidents": {
            "get": {
                "description": "Retrieve all incidents with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "List incidents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by stages (comma-separated)",
                        "name": "stages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by cause tags (comma-separated)",
                        "name": "causeTags",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by significant incidents only",
                        "name": "significant",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by recurring incidents only",
                        "name": "recurring",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.ListIncidentsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new incident record with initial details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "Create a new incident",
                "parameters": [
                    {
                        "description": "Incident creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateIncidentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.IncidentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/incidents/stats": {
            "get": {
                "description": "Retrieve statistics about incidents",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "Get incident statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.IncidentStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/incidents/summaries": {
            "get": {
                "description": "Retrieve incident summaries with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "List incident summaries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by stages (comma-separated)",
                        "name": "stages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by cause tags (comma-separated)",
                        "name": "causeTags",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by significant incidents only",
                        "name": "significant",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by recurring incidents only",
                        "name": "recurring",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.ListIncidentSummariesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/incidents/{id}": {
            "get": {
                "description": "Retrieve a specific incident by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "Get incident by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Incident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.IncidentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing incident record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "Update incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Incident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Incident update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateIncidentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.IncidentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an incident by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incidents"
                ],
                "summary": "Delete incident",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Incident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.GenericStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "description": "Get the status and progress of a job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.JobStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.SetStatusRequest": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "description": "Asset ID (empty for global items)",
                    "type": "string",
                    "example": "asset-123"
                },
                "item_id": {
                    "description": "Checklist item template ID",
                    "type": "string",
                    "example": "security-policy-001"
                },
                "notes": {
                    "description": "Optional notes",
                    "type": "string",
                    "example": "Verified during security audit"
                },
                "status": {
                    "description": "Status: yes, no, or na",
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "na"
                    ],
                    "example": "yes"
                }
            }
        },
        "handler.UploadTemplatesRequest": {
            "type": "object",
            "properties": {
                "templates": {
                    "description": "Array of checklist templates to upload",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChecklistItemTemplate"
                    }
                }
            }
        },
        "model.AssetCoverage": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "asset_type": {
                    "type": "string"
                },
                "asset_value": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "status": {
                    "description": "\"yes\", \"no\" (excludes \"na\")",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ChecklistItemGuide": {
            "type": "object",
            "properties": {
                "acceptance_summary": {
                    "type": "string"
                },
                "faq": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FAQ"
                    }
                },
                "non_technical_steps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scope_caveats": {
                    "type": "string"
                }
            }
        },
        "model.ChecklistItemInfo": {
            "type": "object",
            "properties": {
                "guide": {
                    "$ref": "#/definitions/model.ChecklistItemGuide"
                },
                "law_refs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "legal": {
                    "$ref": "#/definitions/model.ChecklistItemLegal"
                },
                "priority": {
                    "description": "\"must\", \"should\", \"may\"",
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChecklistItemResource"
                    }
                },
                "risks": {
                    "$ref": "#/definitions/model.ChecklistItemRisks"
                },
                "what_it_means": {
                    "type": "string"
                },
                "why_it_matters": {
                    "type": "string"
                }
            }
        },
        "model.ChecklistItemLegal": {
            "type": "object",
            "properties": {
                "article_refs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Quote"
                    }
                },
                "requirement_summary": {
                    "type": "string"
                }
            }
        },
        "model.ChecklistItemResource": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.ChecklistItemRisks": {
            "type": "object",
            "properties": {
                "attack_vectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "potential_impact": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.ChecklistItemTemplate": {
            "type": "object",
            "properties": {
                "asset_types": {
                    "description": "Applicable asset types if scope is \"asset\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "evidence_rules": {
                    "description": "Rules for auto-derivation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EvidenceRule"
                    }
                },
                "help_text": {
                    "description": "Extended metadata fields for rich UI display",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/model.ChecklistItemInfo"
                },
                "kind": {
                    "description": "\"manual\" or \"auto\"",
                    "type": "string"
                },
                "read_only": {
                    "type": "boolean"
                },
                "recommendation": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "scope": {
                    "description": "\"global\", \"asset\", or \"business_unit\"",
                    "type": "string"
                },
                "script_controlled": {
                    "description": "Can be controlled by Lua scripts",
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "why_matters": {
                    "type": "string"
                }
            }
        },
        "model.DerivedChecklistItem": {
            "type": "object",
            "properties": {
                "asset_types": {
                    "description": "Applicable asset types if scope is \"asset\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "attachments": {
                    "description": "File attachment IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "category": {
                    "type": "string"
                },
                "covered_assets": {
                    "description": "Assets covered by this check",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AssetCoverage"
                    }
                },
                "description": {
                    "type": "string"
                },
                "evidence": {
                    "description": "Relevant metadata for auto-derived status",
                    "type": "object",
                    "additionalProperties": true
                },
                "evidence_rules": {
                    "description": "Rules for auto-derivation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EvidenceRule"
                    }
                },
                "help_text": {
                    "description": "Extended metadata fields for rich UI display",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/model.ChecklistItemInfo"
                },
                "kind": {
                    "description": "\"manual\" or \"auto\"",
                    "type": "string"
                },
                "notes": {
                    "description": "From manual assignment",
                    "type": "string"
                },
                "read_only": {
                    "type": "boolean"
                },
                "recommendation": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "scope": {
                    "description": "\"global\", \"asset\", or \"business_unit\"",
                    "type": "string"
                },
                "script_controlled": {
                    "description": "Can be controlled by Lua scripts",
                    "type": "boolean"
                },
                "source": {
                    "description": "\"auto\" or \"manual\"",
                    "type": "string"
                },
                "status": {
                    "description": "\"yes\", \"no\", \"na\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "From manual assignment",
                    "type": "string"
                },
                "why_matters": {
                    "type": "string"
                }
            }
        },
        "model.EvidenceRule": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "e.g., \"http.title\", \"last_scanned_at\"",
                    "type": "string"
                },
                "op": {
                    "description": "\"exists\", \"eq\", \"regex\", \"gte_days_since\"",
                    "type": "string"
                },
                "source": {
                    "description": "\"scan_metadata\"",
                    "type": "string"
                },
                "value": {
                    "description": "Value for \"eq\", \"regex\", \"gte_days_since\""
                }
            }
        },
        "model.FAQ": {
            "type": "object",
            "properties": {
                "a": {
                    "type": "string"
                },
                "q": {
                    "type": "string"
                }
            }
        },
        "model.FileAttachment": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "description": "Optional: links to specific asset",
                    "type": "string"
                },
                "checklist_key": {
                    "description": "Compliance context",
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "error": {
                    "description": "Error message if status is \"failed\"",
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_path": {
                    "description": "Storage metadata",
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "original_name": {
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                },
                "uploaded_by": {
                    "description": "Future: user identification",
                    "type": "string"
                }
            }
        },
        "model.FileAttachmentSummary": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "original_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "model.FileUploadResponse": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "model.Quote": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "v1.AssetCatalogueResponse": {
            "type": "object",
            "required": [
                "assets",
                "total"
            ],
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AssetSummary"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.AssetDetails": {
            "type": "object",
            "required": [
                "discovered_at",
                "id",
                "scan_count",
                "status",
                "type",
                "value"
            ],
            "properties": {
                "discovered_at": {
                    "type": "string"
                },
                "dns_records": {
                    "description": "DNS records for domains/subdomains",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.DNSRecords"
                        }
                    ]
                },
                "id": {
                    "type": "string"
                },
                "last_scanned_at": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "scan_count": {
                    "type": "integer"
                },
                "scan_results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ScanResult"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "description": "Tags like \"http\", \"cf-proxied\", etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1.AssetDetailsResponse": {
            "type": "object",
            "required": [
                "asset"
            ],
            "properties": {
                "asset": {
                    "$ref": "#/definitions/v1.AssetDetails"
                }
            }
        },
        "v1.AssetSummary": {
            "type": "object",
            "required": [
                "discovered_at",
                "id",
                "scan_count",
                "status",
                "type",
                "value"
            ],
            "properties": {
                "discovered_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_scanned_at": {
                    "type": "string"
                },
                "scan_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "example": "discovered,scanning,scanned,error"
                },
                "tags": {
                    "description": "Tags like \"http\", \"cf-proxied\", etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "example": "domain,subdomain,ip,service"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1.Attachment": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "evidence.pdf"
                },
                "note": {
                    "type": "string",
                    "example": "Email headers and logs"
                }
            }
        },
        "v1.BusinessUnitResponse": {
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "v1.CreateBusinessUnitRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Finance Department"
                }
            }
        },
        "v1.CreateIncidentRequest": {
            "type": "object",
            "required": [
                "causeTag",
                "initialDetails"
            ],
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Attachment"
                    }
                },
                "causeTag": {
                    "type": "string",
                    "example": "phishing,vuln_exploit,misconfig,malware,other"
                },
                "downtimeMinutes": {
                    "type": "integer",
                    "example": 30
                },
                "financialImpactPct": {
                    "type": "number",
                    "example": 2.5
                },
                "initialDetails": {
                    "$ref": "#/definitions/v1.InitialDetails"
                },
                "recurring": {
                    "type": "boolean"
                },
                "sectorPreset": {
                    "type": "string",
                    "example": "financial"
                },
                "significant": {
                    "type": "boolean"
                },
                "usersAffected": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "v1.DNSRecords": {
            "type": "object",
            "properties": {
                "a": {
                    "description": "A records (IPv4)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "aaaa": {
                    "description": "AAAA records (IPv6)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cname": {
                    "description": "CNAME records",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mx": {
                    "description": "MX records (mail exchange)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ns": {
                    "description": "NS records (name servers)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ptr": {
                    "description": "PTR records (reverse DNS)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "soa": {
                    "description": "SOA records (start of authority)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "txt": {
                    "description": "TXT records",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.DiscoverAssetsRequest": {
            "type": "object",
            "required": [
                "hosts"
            ],
            "properties": {
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "example.com",
                        "192.168.1.1"
                    ]
                }
            }
        },
        "v1.DiscoverAssetsResponse": {
            "type": "object",
            "required": [
                "host_count",
                "job_id",
                "message",
                "started_at"
            ],
            "properties": {
                "host_count": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "v1.ErrorResponse": {
            "type": "object",
            "required": [
                "code",
                "error"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "v1.FinalDetails": {
            "type": "object",
            "properties": {
                "crossBorderDesc": {
                    "type": "string",
                    "example": "No cross-border effects identified"
                },
                "gravity": {
                    "type": "string",
                    "example": "high"
                },
                "impact": {
                    "type": "string",
                    "example": "No data exfiltration occurred"
                },
                "lessons": {
                    "type": "string",
                    "example": "Need for regular security training"
                },
                "mitigations": {
                    "type": "string",
                    "example": "Enhanced email filtering implemented"
                },
                "rootCause": {
                    "type": "string",
                    "example": "Lack of email security awareness"
                }
            }
        },
        "v1.GenericStatusResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "v1.HealthResponse": {
            "type": "object",
            "required": [
                "services",
                "status",
                "timestamp"
            ],
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "healthy,unhealthy"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "v1.IncidentDetails": {
            "type": "object",
            "properties": {
                "final": {
                    "$ref": "#/definitions/v1.FinalDetails"
                },
                "initial": {
                    "$ref": "#/definitions/v1.InitialDetails"
                },
                "update": {
                    "$ref": "#/definitions/v1.UpdateDetails"
                }
            }
        },
        "v1.IncidentResponse": {
            "type": "object",
            "required": [
                "causeTag",
                "createdAt",
                "details",
                "id",
                "stage",
                "updatedAt"
            ],
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Attachment"
                    }
                },
                "causeTag": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "details": {
                    "$ref": "#/definitions/v1.IncidentDetails"
                },
                "downtimeMinutes": {
                    "type": "integer"
                },
                "financialImpactPct": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                },
                "sectorPreset": {
                    "type": "string"
                },
                "significant": {
                    "type": "boolean"
                },
                "stage": {
                    "type": "string",
                    "example": "initial,update,final"
                },
                "updatedAt": {
                    "type": "string"
                },
                "usersAffected": {
                    "type": "integer"
                }
            }
        },
        "v1.IncidentStatsResponse": {
            "type": "object",
            "required": [
                "byCause",
                "byStage",
                "recurringIncidents",
                "significantIncidents",
                "totalIncidents"
            ],
            "properties": {
                "byCause": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "byStage": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "recurringIncidents": {
                    "type": "integer"
                },
                "significantIncidents": {
                    "type": "integer"
                },
                "totalIncidents": {
                    "type": "integer"
                }
            }
        },
        "v1.IncidentSummaryResponse": {
            "type": "object",
            "required": [
                "causeTag",
                "createdAt",
                "id",
                "stage",
                "summary",
                "title",
                "updatedAt"
            ],
            "properties": {
                "causeTag": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                },
                "significant": {
                    "type": "boolean"
                },
                "stage": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "v1.InitialDetails": {
            "type": "object",
            "required": [
                "detectedAt",
                "summary",
                "title"
            ],
            "properties": {
                "detectedAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "possibleCrossBorder": {
                    "type": "boolean"
                },
                "summary": {
                    "type": "string",
                    "example": "Multiple users reported suspicious emails"
                },
                "suspectedIllegal": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string",
                    "example": "Security Incident - Phishing Attack"
                }
            }
        },
        "v1.JobProgress": {
            "type": "object",
            "required": [
                "completed",
                "failed",
                "total"
            ],
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.JobStatusResponse": {
            "type": "object",
            "required": [
                "job_id",
                "progress",
                "started_at",
                "status"
            ],
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/definitions/v1.JobProgress"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "pending,running,completed,failed"
                }
            }
        },
        "v1.ListBusinessUnitsResponse": {
            "type": "object",
            "required": [
                "businessUnits",
                "total"
            ],
            "properties": {
                "businessUnits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.BusinessUnitResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.ListIncidentSummariesResponse": {
            "type": "object",
            "required": [
                "summaries",
                "total"
            ],
            "properties": {
                "summaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.IncidentSummaryResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.ListIncidentsResponse": {
            "type": "object",
            "required": [
                "incidents",
                "total"
            ],
            "properties": {
                "incidents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.IncidentResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.ScanResult": {
            "type": "object",
            "required": [
                "duration",
                "executed_at",
                "id",
                "script_name",
                "success"
            ],
            "properties": {
                "duration": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "executed_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "output": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "script_name": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "v1.SetBusinessUnitChecklistStatusRequest": {
            "type": "object",
            "required": [
                "business_unit_id",
                "item_id",
                "status"
            ],
            "properties": {
                "business_unit_id": {
                    "description": "Business unit ID",
                    "type": "string",
                    "example": "bu-123"
                },
                "item_id": {
                    "description": "Checklist item template ID",
                    "type": "string",
                    "example": "security-policy-001"
                },
                "notes": {
                    "description": "Optional notes",
                    "type": "string",
                    "example": "Verified during security audit"
                },
                "status": {
                    "description": "Status: yes, no, or na",
                    "type": "string",
                    "enum": [
                        "yes",
                        "no",
                        "na"
                    ],
                    "example": "yes"
                }
            }
        },
        "v1.StartAllAssetsScanRequest": {
            "type": "object",
            "properties": {
                "asset_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "domain",
                        "ip",
                        "service"
                    ]
                },
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1.StartAllAssetsScanResponse": {
            "type": "object",
            "required": [
                "asset_count",
                "job_id",
                "message",
                "started_at"
            ],
            "properties": {
                "asset_count": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "v1.StartAssetScanRequest": {
            "type": "object",
            "properties": {
                "scripts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "vulnerability_scan.lua",
                        "port_scan.lua"
                    ]
                }
            }
        },
        "v1.StartAssetScanResponse": {
            "type": "object",
            "required": [
                "asset_id",
                "job_id",
                "message",
                "started_at"
            ],
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                }
            }
        },
        "v1.UpdateBusinessUnitRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Updated Finance Department"
                }
            }
        },
        "v1.UpdateDetails": {
            "type": "object",
            "properties": {
                "corrections": {
                    "type": "string",
                    "example": "Blocked malicious domains"
                },
                "gravity": {
                    "type": "string",
                    "example": "high"
                },
                "impact": {
                    "type": "string",
                    "example": "Email system compromised"
                },
                "iocs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "malicious-domain.com",
                        "suspicious-ip-address"
                    ]
                }
            }
        },
        "v1.UpdateIncidentRequest": {
            "type": "object",
            "required": [
                "causeTag",
                "stage"
            ],
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Attachment"
                    }
                },
                "causeTag": {
                    "type": "string",
                    "example": "phishing,vuln_exploit,misconfig,malware,other"
                },
                "downtimeMinutes": {
                    "type": "integer",
                    "example": 30
                },
                "finalDetails": {
                    "$ref": "#/definitions/v1.FinalDetails"
                },
                "financialImpactPct": {
                    "type": "number",
                    "example": 2.5
                },
                "initialDetails": {
                    "$ref": "#/definitions/v1.InitialDetails"
                },
                "recurring": {
                    "type": "boolean"
                },
                "sectorPreset": {
                    "type": "string",
                    "example": "financial"
                },
                "significant": {
                    "type": "boolean"
                },
                "stage": {
                    "type": "string",
                    "example": "initial,update,final"
                },
                "updateDetails": {
                    "$ref": "#/definitions/v1.UpdateDetails"
                },
                "usersAffected": {
                    "type": "integer",
                    "example": 100
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Asset Scanner API",
	Description:      "A powerful asset discovery and scanning API with Lua script support",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
